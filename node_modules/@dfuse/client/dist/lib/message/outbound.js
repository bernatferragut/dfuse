"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const error_1 = require("../types/error");
// **Important** The key must be the same as the API type but in upper snake case for "in" operation to work
var OutboundMessageType;
(function (OutboundMessageType) {
    OutboundMessageType["GET_ACTION_TRACES"] = "get_action_traces";
    OutboundMessageType["GET_TABLE_ROWS"] = "get_table_rows";
    OutboundMessageType["GET_TRANSACTION_LIFECYCLE"] = "get_transaction_lifecycle";
    OutboundMessageType["GET_HEAD_INFO"] = "get_head_info";
    OutboundMessageType["UNLISTEN"] = "unlisten";
})(OutboundMessageType = exports.OutboundMessageType || (exports.OutboundMessageType = {}));
function getActionTracesMessage(data, streamOptions = {}) {
    return createOutboundMessage(OutboundMessageType.GET_ACTION_TRACES, data, Object.assign({ listen: true }, streamOptions));
}
exports.getActionTracesMessage = getActionTracesMessage;
/**
 * @deprecated The message factories are deprecated, there is no need to create your
 *             own message anynore. This will be removed in a future release. The standard
 *             client does not use this anymore.
 */
function getTableRowsMessage(data, streamOptions = {}) {
    return createOutboundMessage(OutboundMessageType.GET_TABLE_ROWS, data, Object.assign({ listen: true }, streamOptions));
}
exports.getTableRowsMessage = getTableRowsMessage;
/**
 * @deprecated The message factories are deprecated, there is no need to create your
 *             own message anynore. This will be removed in a future release. The standard
 *             client does not use this anymore.
 */
function getTransactionLifecycleMessage(data, streamOptions = {}) {
    return createOutboundMessage(OutboundMessageType.GET_TRANSACTION_LIFECYCLE, data, Object.assign({ listen: true, fetch: true }, streamOptions));
}
exports.getTransactionLifecycleMessage = getTransactionLifecycleMessage;
/**
 * @deprecated The message factories are deprecated, there is no need to create your
 *             own message anynore. This will be removed in a future release. The standard
 *             client does not use this anymore.
 */
function getHeadInfoMessage(streamOptions = {}) {
    return createOutboundMessage(OutboundMessageType.GET_HEAD_INFO, {}, Object.assign({ listen: true }, streamOptions));
}
exports.getHeadInfoMessage = getHeadInfoMessage;
/**
 * @deprecated The message factories are deprecated, there is no need to create your
 *             own message anynore. This will be removed in a future release. The standard
 *             client does not use this anymore.
 */
function unlistenMessage(data) {
    return {
        req_id: data.req_id,
        type: OutboundMessageType.UNLISTEN,
        data
    };
}
exports.unlistenMessage = unlistenMessage;
/**
 * Exported for consumption from internal packages. This does **not**
 * have any **Backward compatibility** policy nor documentation attached
 * to it.
 *
 * It will be moved and made private again when message factories
 * above have been removed.
 */
function createOutboundMessage(type, data, options) {
    const req_id = options.req_id;
    if (req_id === undefined) {
        throw new error_1.DfuseClientError("All outbound message should have a 'req_id' value");
    }
    return Object.assign({ type,
        req_id,
        data }, options);
}
exports.createOutboundMessage = createOutboundMessage;
//# sourceMappingURL=outbound.js.map
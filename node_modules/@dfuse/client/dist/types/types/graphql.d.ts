export declare type GraphqlOperationType = "query" | "mutation" | "subscription";
export declare type GraphqlDocument = string | {
    kind: "Document";
    loc?: Record<string, unknown>;
    definitions: ReadonlyArray<unknown>;
};
export declare type GraphqlInboundMessageType = "connection_ack" | "connection_error" | "ka" | "data" | "error" | "complete";
export declare type GraphqlInboundMessage = {
    type: "connection_ack";
} | {
    type: "connection_error";
    payload: Error;
} | {
    type: "ka";
} | {
    id: string;
    type: "data";
    payload: {
        data: any;
        errors?: Error[];
    };
} | {
    id: string;
    type: "error";
    payload: Error;
} | {
    id: string;
    type: "complete";
};
export declare type GraphqlOutboundMessage = {
    type: "connection_init";
    payload?: Record<string, unknown>;
} | {
    type: "stop";
    id: string;
} | GraphqlStartOutboundMessage | {
    type: "connection_terminate";
};
export declare type GraphqlStartOutboundMessage = {
    id: string;
    type: "start";
    payload: {
        query: GraphqlDocument;
        variables?: GraphqlVariables;
        operationName?: string;
    };
};
export declare type GraphqlVariables = Record<string, unknown> | (() => Promise<Record<string, unknown>>) | (() => Record<string, unknown>) | undefined;
export declare type GraphqlResponse<T> = {
    data: T;
    errors?: GraphqlResponseError[];
};
export declare type GraphqlResponseError = {
    message: string;
    locations?: {
        line: number;
        column: number;
    }[];
    path?: (string | number)[];
    extensions?: Record<string, unknown>;
};

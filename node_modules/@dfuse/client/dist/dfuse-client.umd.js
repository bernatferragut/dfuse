!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((e=e||self).dfuseClient={})}(this,(function(e){"use strict";
/*! *****************************************************************************
    Copyright (c) Microsoft Corporation. All rights reserved.
    Licensed under the Apache License, Version 2.0 (the "License"); you may not use
    this file except in compliance with the License. You may obtain a copy of the
    License at http://www.apache.org/licenses/LICENSE-2.0

    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
    MERCHANTABLITY OR NON-INFRINGEMENT.

    See the Apache Version 2.0 License for specific language governing permissions
    and limitations under the License.
    ***************************************************************************** */function t(e,t,i,o){return new(i||(i=Promise))((function(n,s){function r(e){try{c(o.next(e))}catch(e){s(e)}}function a(e){try{c(o.throw(e))}catch(e){s(e)}}function c(e){e.done?n(e.value):new i((function(t){t(e.value)})).then(r,a)}c((o=o.apply(e,t||[])).next())}))}var i=1e3,o=60*i,n=60*o,s=24*n,r=7*s,a=365.25*s,c=function(e,t){t=t||{};var c=typeof e;if("string"===c&&e.length>0)return function(e){if((e=String(e)).length>100)return;var t=/^((?:\d+)?\-?\d?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(e);if(!t)return;var c=parseFloat(t[1]);switch((t[2]||"ms").toLowerCase()){case"years":case"year":case"yrs":case"yr":case"y":return c*a;case"weeks":case"week":case"w":return c*r;case"days":case"day":case"d":return c*s;case"hours":case"hour":case"hrs":case"hr":case"h":return c*n;case"minutes":case"minute":case"mins":case"min":case"m":return c*o;case"seconds":case"second":case"secs":case"sec":case"s":return c*i;case"milliseconds":case"millisecond":case"msecs":case"msec":case"ms":return c;default:return}}(e);if("number"===c&&!1===isNaN(e))return t.long?function(e){var t=Math.abs(e);if(t>=s)return h(e,t,s,"day");if(t>=n)return h(e,t,n,"hour");if(t>=o)return h(e,t,o,"minute");if(t>=i)return h(e,t,i,"second");return e+" ms"}(e):function(e){var t=Math.abs(e);if(t>=s)return Math.round(e/s)+"d";if(t>=n)return Math.round(e/n)+"h";if(t>=o)return Math.round(e/o)+"m";if(t>=i)return Math.round(e/i)+"s";return e+"ms"}(e);throw new Error("val is not a non-empty string or a valid number. val="+JSON.stringify(e))};function h(e,t,i,o){var n=t>=1.5*i;return Math.round(e/i)+" "+o+(n?"s":"")}var u=function(e){function t(e){let t=0;for(let i=0;i<e.length;i++)t=(t<<5)-t+e.charCodeAt(i),t|=0;return i.colors[Math.abs(t)%i.colors.length]}function i(e){let s;function r(...e){if(!r.enabled)return;const t=r,o=Number(new Date),n=o-(s||o);t.diff=n,t.prev=s,t.curr=o,s=o,e[0]=i.coerce(e[0]),"string"!=typeof e[0]&&e.unshift("%O");let a=0;e[0]=e[0].replace(/%([a-zA-Z%])/g,(o,n)=>{if("%%"===o)return o;a++;const s=i.formatters[n];if("function"==typeof s){const i=e[a];o=s.call(t,i),e.splice(a,1),a--}return o}),i.formatArgs.call(t,e),(t.log||i.log).apply(t,e)}return r.namespace=e,r.enabled=i.enabled(e),r.useColors=i.useColors(),r.color=t(e),r.destroy=o,r.extend=n,"function"==typeof i.init&&i.init(r),i.instances.push(r),r}function o(){const e=i.instances.indexOf(this);return-1!==e&&(i.instances.splice(e,1),!0)}function n(e,t){const o=i(this.namespace+(void 0===t?":":t)+e);return o.log=this.log,o}function s(e){return e.toString().substring(2,e.toString().length-2).replace(/\.\*\?$/,"*")}return i.debug=i,i.default=i,i.coerce=function(e){if(e instanceof Error)return e.stack||e.message;return e},i.disable=function(){const e=[...i.names.map(s),...i.skips.map(s).map(e=>"-"+e)].join(",");return i.enable(""),e},i.enable=function(e){let t;i.save(e),i.names=[],i.skips=[];const o=("string"==typeof e?e:"").split(/[\s,]+/),n=o.length;for(t=0;t<n;t++)o[t]&&("-"===(e=o[t].replace(/\*/g,".*?"))[0]?i.skips.push(new RegExp("^"+e.substr(1)+"$")):i.names.push(new RegExp("^"+e+"$")));for(t=0;t<i.instances.length;t++){const e=i.instances[t];e.enabled=i.enabled(e.namespace)}},i.enabled=function(e){if("*"===e[e.length-1])return!0;let t,o;for(t=0,o=i.skips.length;t<o;t++)if(i.skips[t].test(e))return!1;for(t=0,o=i.names.length;t<o;t++)if(i.names[t].test(e))return!0;return!1},i.humanize=c,Object.keys(e).forEach(t=>{i[t]=e[t]}),i.instances=[],i.names=[],i.skips=[],i.formatters={},i.selectColor=t,i.enable(i.load()),i},d=function(e,t){return e(t={exports:{}},t.exports),t.exports}((function(e,t){t.log=function(...e){return"object"==typeof console&&console.log&&console.log(...e)},t.formatArgs=function(t){if(t[0]=(this.useColors?"%c":"")+this.namespace+(this.useColors?" %c":" ")+t[0]+(this.useColors?"%c ":" ")+"+"+e.exports.humanize(this.diff),!this.useColors)return;const i="color: "+this.color;t.splice(1,0,i,"color: inherit");let o=0,n=0;t[0].replace(/%[a-zA-Z%]/g,e=>{"%%"!==e&&(o++,"%c"===e&&(n=o))}),t.splice(n,0,i)},t.save=function(e){try{e?t.storage.setItem("debug",e):t.storage.removeItem("debug")}catch(e){}},t.load=function(){let e;try{e=t.storage.getItem("debug")}catch(e){}!e&&"undefined"!=typeof process&&"env"in process&&(e=process.env.DEBUG);return e},t.useColors=function(){if("undefined"!=typeof window&&window.process&&("renderer"===window.process.type||window.process.__nwjs))return!0;if("undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/))return!1;return"undefined"!=typeof document&&document.documentElement&&document.documentElement.style&&document.documentElement.style.WebkitAppearance||"undefined"!=typeof window&&window.console&&(window.console.firebug||window.console.exception&&window.console.table)||"undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/)&&parseInt(RegExp.$1,10)>=31||"undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/)},t.storage=function(){try{return localStorage}catch(e){}}(),t.colors=["#0000CC","#0000FF","#0033CC","#0033FF","#0066CC","#0066FF","#0099CC","#0099FF","#00CC00","#00CC33","#00CC66","#00CC99","#00CCCC","#00CCFF","#3300CC","#3300FF","#3333CC","#3333FF","#3366CC","#3366FF","#3399CC","#3399FF","#33CC00","#33CC33","#33CC66","#33CC99","#33CCCC","#33CCFF","#6600CC","#6600FF","#6633CC","#6633FF","#66CC00","#66CC33","#9900CC","#9900FF","#9933CC","#9933FF","#99CC00","#99CC33","#CC0000","#CC0033","#CC0066","#CC0099","#CC00CC","#CC00FF","#CC3300","#CC3333","#CC3366","#CC3399","#CC33CC","#CC33FF","#CC6600","#CC6633","#CC9900","#CC9933","#CCCC00","#CCCC33","#FF0000","#FF0033","#FF0066","#FF0099","#FF00CC","#FF00FF","#FF3300","#FF3333","#FF3366","#FF3399","#FF33CC","#FF33FF","#FF6600","#FF6633","#FF9900","#FF9933","#FFCC00","#FFCC33"],e.exports=u(t);const{formatters:i}=e.exports;i.j=function(e){try{return JSON.stringify(e)}catch(e){return"[UnexpectedJSONParseError]: "+e.message}}}));d.log,d.formatArgs,d.save,d.load,d.useColors,d.storage,d.colors;function l(e,t,i,o,n){return new f(e,t,i,o,n)}function g(e){return new m(e)}function p(e){const t=Date.now()/1e3;return e.expires_at<=t}class f{constructor(e,t,i,o,n){this.fetchTokenInfo=e,this.onTokenRefresh=t,this.delayBuffer=i,this.apiTokenStore=o,this.refreshScheduler=n,this.debug=d("dfuse:token-manager")}release(){this.debug("Releasing default API token manager"),this.refreshScheduler.release(),this.apiTokenStore.release()}getTokenInfo(){return t(this,void 0,void 0,(function*(){const e=yield this.apiTokenStore.get();return e&&!p(e)?(this.maybeScheduleNextRefresh(e,{forceRefresh:!1}),this.debug("Returning token found in API token store since it was still valid"),Promise.resolve(e)):(this.debug("Returning a fresh API token as it was not present in store or expired"),yield this.refreshToken())}))}refreshToken(){return t(this,void 0,void 0,(function*(){const e=yield this.internalFetchToken();this.debug("Retrieved an API token that is going to expires at %s (%s)",new Date(1e3*e.expires_at),e.token),this.maybeScheduleNextRefresh(e,{forceRefresh:!0});try{this.debug("Storing API token into token storage"),yield this.apiTokenStore.set(e)}catch(e){this.debug("Storing token into storage failed %s (%o)",e,e)}return this.debug("Notifying upstream listener that API token has been refreshed."),this.onTokenRefresh(e.token),e}))}maybeScheduleNextRefresh(e,t){if(!t.forceRefresh&&this.refreshScheduler.hasScheduledJob())return;const i=this.getRefreshDelayInSeconds(e),o=new Date(Date.now()+1e3*i);this.debug("Scheduling next token refresh to occur at %s (in %s seconds)",o,i),this.refreshScheduler.schedule(i,()=>this.refreshToken())}getRefreshDelayInSeconds(e){const t=Math.floor(Date.now()/1e3);return(e.expires_at-t)*this.delayBuffer}internalFetchToken(){return t(this,void 0,void 0,(function*(){return void 0!==this.fetchTokenPromise?this.fetchTokenPromise:(this.fetchTokenPromise=new Promise((e,t)=>{this.fetchTokenInfo().then(t=>{this.fetchTokenPromise=void 0,e(t)}).catch(e=>{this.fetchTokenPromise=void 0,t(e)})}),this.fetchTokenPromise)}))}}class m{constructor(e){this.token=e||"a.b.c",this.expiresAt=0,this.debug=d("dfuse:token-manager-noop")}release(){this.debug("Releasing default API token manager")}getTokenInfo(){return t(this,void 0,void 0,(function*(){return{token:this.token,expires_at:this.expiresAt}}))}}class v extends Error{constructor(e,t){super(e),this.description=e,this.cause=t}}class b extends v{constructor(e,t){super(e.message,t),this.code=e.code,this.trace_id=e.trace_id,this.message=e.message,this.details=e.details}}class y extends v{constructor(e,t){super(e,t)}}class k extends v{constructor(e,t){super(e,t)}}var w,T={};class S{release(){}get(){return t(this,void 0,void 0,(function*(){return this.apiTokenInfo}))}set(e){return t(this,void 0,void 0,(function*(){this.apiTokenInfo=e}))}}class C{constructor(e){if(this.key=e,"object"!=typeof localStorage){throw new y(["This environment does not contain a valid `localStorage` object in the global scope to use.","","You are most likely in a Node.js environment where a global `localStorage` is not available by default.","This API token store concrete impelementation is not usable in your environment. You should be","providing a different implementation of ApiTokenInfo.","","If this error occurred when you did not provide yourself the instance, it means our auto-detection","mechanism incorrectly thought it could use `LocalStorageApiTokenStore` instance while it should","have not. Please report a bug about this issue so we can fix it.","","If you provided the instance yourself, you should read our documentation to better","understand what you should provide here.","","See https://github.com/dfuse-io/client-js"].join("\n"))}}release(){}get(){return t(this,void 0,void 0,(function*(){if(void 0!==this.apiTokenInfo)return this.apiTokenInfo;const e=localStorage.getItem(this.key);return null!=e?(this.apiTokenInfo=JSON.parse(e),this.apiTokenInfo):void 0}))}set(e){return t(this,void 0,void 0,(function*(){this.apiTokenInfo=e,localStorage.setItem(this.key,JSON.stringify(e))}))}}class _{constructor(e){this.filePath=e}release(){}get(){return t(this,void 0,void 0,(function*(){if(void 0!==this.apiTokenInfo)return this.apiTokenInfo;const e=yield function(e){return t(this,void 0,void 0,(function*(){return new Promise((t,i)=>{T.existsSync(e)?T.readFile(e,(e,o)=>{e?i(e):t(o)}):t(void 0)})}))}(this.filePath);return void 0!==e?(this.apiTokenInfo=JSON.parse(e),this.apiTokenInfo):void 0}))}set(e){return t(this,void 0,void 0,(function*(){this.apiTokenInfo=e,yield function(e,i){return t(this,void 0,void 0,(function*(){return new Promise((o,n)=>{try{!function e(i){return t(this,void 0,void 0,(function*(){if(!T.isAbsolute(i))return;const t=T.join(i,"..");t===T.join("/")||T.existsSync(t)||e(t),T.existsSync(i)||T.mkdirSync(i)}))}(T.dirname(e))}catch(e){return void n(e)}T.writeFile(e,i,e=>{e?n(e):o()})})}))}(this.filePath,JSON.stringify(e))}))}}class A extends _{constructor(e){super(`${T.homedir()}/.dfuse/${T.createHash("sha256").update(e).digest("hex")}/token.json`)}}function R(t){return{req_id:t.req_id,type:e.OutboundMessageType.UNLISTEN,data:t}}function E(e,t,i){const o=i.req_id;if(void 0===o)throw new y("All outbound message should have a 'req_id' value");return Object.assign({type:e,req_id:o,data:t},i)}function O(e,t,i={}){return new I(e,t,function(e){const t=d("dfuse:http");if(void 0!==e)return t("Using user provided `fetch` option."),e;if("undefined"!=typeof window&&null!=window.fetch)return t("Using `fetch` global value found on 'window' variable (Browser environment)."),window.fetch.bind(window);if("undefined"!=typeof global&&null!=global.fetch)return t("Using `fetch` global value found on 'global' variable (Node.js environment)."),global.fetch.bind(global);throw new y(["You did not provide a `fetch` option and we were not able to infer one from the global scope.","","You are most likely in a Node.js environment where a global `fetch` is not available by defaut.","To resolve the issue, either pass a compatible `fetch` option or globally defined a `global.fetch`","variable pointing to a compatible `fetch` method.","","We invite you to read our documentation to learn more about this problem.","","See https://github.com/dfuse-io/client-js#nodejs"].join("\n"))}(i.fetch))}(w=e.OutboundMessageType||(e.OutboundMessageType={})).GET_ACTION_TRACES="get_action_traces",w.GET_TABLE_ROWS="get_table_rows",w.GET_TRANSACTION_LIFECYCLE="get_transaction_lifecycle",w.GET_HEAD_INFO="get_head_info",w.UNLISTEN="unlisten";class I{constructor(e,t,i){this.debug=d("dfuse:http"),this.authUrl=e,this.apiUrl=t,this.fetch=i}release(){}authRequest(e,i,o,n,s){return t(this,void 0,void 0,(function*(){return this.request(void 0,this.authUrl+e,i,o,n,s)}))}apiRequest(e,i,o,n,s,r){return t(this,void 0,void 0,(function*(){return this.request(e,this.apiUrl+i,o,n,s,r)}))}request(e,i,o,n,s,r){return t(this,void 0,void 0,(function*(){this.debug("Preparing request [%s %s](%o)",o,i,n),n&&Object.keys(n).length>0&&(i+="?"+this.queryParams(n));const t={};void 0!==e&&(t.Authorization=`Bearer ${e}`);const a=r||{},c=Object.assign(Object.assign({},t),a);let h;if(void 0!==s){const e=this.getHeaderValue(c,"content-type");h=void 0===e||"application/json"===e?JSON.stringify(s):"application/x-www-form-urlencoded"===e?this.formEncodedBody(s):s}try{this.debug("Executing request [%s %s](headers: %o, bodyLength: %s)",o,i,c,(h||"").length);const e=yield this.fetch(i,{headers:c,method:o,body:h});if(this.debug("Received response [%s %s %s](headers: %o)",e.status,e.statusText,e.url,e.headers),!e.ok)throw this.debug("Request returned with an error HTTP code %s",e.status),yield this.bodyToApiError(e);return this.debug("Turning response body into response result"),yield this.bodyToResponse(e)}catch(e){if(e instanceof v)throw e;throw new y("Unable to perform HTTP request correctly",e)}}))}bodyToResponse(e){return t(this,void 0,void 0,(function*(){try{return yield e.json()}catch(e){throw new y("The returned body shall have been a valid JSON object",e)}}))}bodyToApiError(e){return t(this,void 0,void 0,(function*(){const t=yield e.text();try{return new b(JSON.parse(t))}catch(e){return new y(`The returned body shall have been a valid JSON object, got '${t}'`,e)}}))}queryParams(e){const t=[];for(const i of Object.keys(e)){const o=e[i];void 0!==o&&t.push(encodeURIComponent(i)+"="+encodeURIComponent(o))}return t.join("&")}formEncodedBody(e){const t=[];for(const i of Object.keys(e)){const o=e[i];void 0!==o&&t.push(i+"="+o)}return t.join("&")}getHeaderValue(e,t){for(const i in e)if(i.toLowerCase()===t.toLowerCase())return e[i]}hasHeaderKey(e,t){return void 0!==this.getHeaderValue(e,t)}}const F="/v1/auth/issue",j="/v0/block_id/by_time",N="/v0/transactions/:id",M="/v0/state/abi",P="/v0/state/abi/bin_to_json",q="/v0/state/key_accounts",x="/v0/state/permission_links",D="/v0/state/table",L="/v0/state/table/row",U="/v0/state/tables/scopes",J="/v0/state/tables/accounts",B="/v0/state/table_scopes",$="/v0/search/transactions";function G(e,t={}){return new Y(e,Object.assign({id:"",autoReconnect:!0,reconnectDelayInMs:K,keepAlive:!0,keepAliveIntervalInMs:V,webSocketFactory:H(t.id,t.webSocketProtocols,t.webSocketFactory)},t))}function H(e,i,o){const n=d("dfuse:socket"+(e?`:${e}`:""));if(void 0!==o)return n("Using user provided `webSocketFactory` option."),o;if("undefined"!=typeof window&&null!=window.WebSocket)return n("Using `WebSocket` global value found on 'window' variable (Browser environment)."),e=>t(this,void 0,void 0,(function*(){return new window.WebSocket(e,i)}));if("undefined"!=typeof global&&null!=global.WebSocket)return n("Using `WebSocket` global value found on 'global' variable (Node.js environment)."),e=>t(this,void 0,void 0,(function*(){return new global.WebSocket(e,i,{})}));throw new y(["You did not provide a `webSocket` option and we were not able find a `WebSocket` object in","the global scope to create use.","","You are most likely in a Node.js environment where a global `WebSocket` is not available by default.","To resolve the issue, either pass a compatible `webSocket` option or globally defined a `global.WebSocket`","variable pointing to a compatible `WebSocket` client.","","We invite you to read our documentation to learn more about this problem.","","See https://github.com/dfuse-io/client-js#nodejs"].join("\n"))}const W=()=>{},V=3e4,K=2500;class Y{constructor(e,t){this.isConnected=!1,this.onSocketConnectOpenFactory=e=>()=>{this.debug("Received `onopen` (via connect) notification from socket."),this.isConnected=!0,this.connectionPromise=void 0,!0===this.keepAliveOption()&&this.registerKeepAliveHandler(),this.debug("Signaling completion of `connect` method in the outer scope."),e()},this.onSocketReconnectOpenFactory=e=>()=>{this.debug("Received `onopen` (via reconnect) notification from socket with ready state %d.",this.socket.readyState),this.isConnected=!0,this.connectionPromise=void 0,!0===this.keepAliveOption()&&this.registerKeepAliveHandler(),this.debug("Signaling completion of `reconnect` method in the outer scope."),e(!0),this.debug("Sending a `onReconnect` notification to client consumer."),this.onReconnect()},this.onSocketErrorFactory=e=>t=>{this.debug("Received `onerror` notification from socket (%s).",t.error),this.debug("Signaling rejection of connection in the outer scope."),e(t),this.debug("Sending an `onError` notification to client consumer."),this.onError(t)},this.onSocketReconnectErrorFactory=()=>e=>{this.debug("Received `onerror` (via reconnect) notification from socket."),this.debug("Sending an `onError` notification to client consumer."),this.onError(e)},this.onSocketCloseFactory=()=>this.commonOnSocketCloseFactory("connect",()=>{this.reconnect().catch(e=>{this.debug("The re-connection never succeed, will not retry anymore.",e)})}),this.onSocketReconnectCloseFactory=(e,t)=>this.commonOnSocketCloseFactory("reconnect",()=>{this.tryReconnect(e,t)}),this.commonOnSocketCloseFactory=(e,t)=>i=>{this.debug("Received `onclose` (via %s) notification from socket.",e),this.isConnected=!1,this.connectionPromise=void 0,this.closeResolver&&(this.debug("Resolving disconnect close promise (via %s).",e),this.closeResolver(),this.closeResolver=void 0,this.closePromise=void 0),this.cleanSocket(),this.debug("Sending a `onClose` (%d) notification to client consumer (via %s).",i.code,e),this.onClose(i),1e3!==i.code&&1009!==i.code&&"client"!==this.disconnectInitiator&&this.options.autoReconnect?(this.debug("Socket has close abnormally (via %s), trying to re-connect to socket (infinite retry).",e),t()):(this.debug("Terminating socket lifecycle (via %s), no reconnection will be attempted.",e),this.onTerminationListener&&this.onTerminationListener(),this.disconnectInitiator=void 0)},this.onSocketMessage=e=>{let t;try{t=JSON.parse(e.data)}catch(e){return void this.debug("Received a non-JSON message, are you sure you are talking to dfuse API?")}this.listener&&this.listener(t)},this.tryReconnect=(e,t)=>{let i=this.options.reconnectDelayInMs;void 0===i&&(i=K),this.debug(`Waiting ${i}ms before trying to perform the re-connection.`),setTimeout(()=>{this.createAnOpenSocket(this.onSocketReconnectOpenFactory(e),this.onSocketReconnectErrorFactory(),this.onSocketReconnectCloseFactory(e,t),t)},i)},this.url=e,this.options=t,this.debug=d("dfuse:socket"+(""!==t.id?`:${t.id}`:""))}setApiToken(e){this.debug("Socket API token updated to %s.",e),this.apiToken=e}connect(e,i={}){return t(this,void 0,void 0,(function*(){return this.debug("About to connect to remote endpoint."),void 0!==this.connectionPromise?this.connectionPromise:this.isConnected?void 0:(this.listener=e,this.onReconnectListener=i.onReconnect,this.onTerminationListener=i.onTermination,this.connectionPromise=new Promise((e,t)=>{this.debug("Connection promise started, creating and opening socket."),this.createAnOpenSocket(this.onSocketConnectOpenFactory(e),this.onSocketErrorFactory(t),this.onSocketCloseFactory(),t)}),this.debug("Connection to remote endpoint in-progress, returning promise to caller."),this.connectionPromise)}))}disconnect(){return t(this,void 0,void 0,(function*(){return this.debug("About to disconnect from remote endpoint."),this.closePromise?(this.debug("A disconnect is already in progress, joining it for termination."),this.closePromise):void 0!==this.socket?(this.onReconnectListener=void 0,this.listener=void 0,this.debug("Closing socket."),this.socket.close(),this.debug("Lazily disconnected, remaining clean up shall be performed when receiving `onclose` event."),this.isConnected=!1,this.disconnectInitiator="client",this.closePromise=new Promise(e=>{this.closeResolver=e}),this.closePromise):void 0}))}send(e){return t(this,void 0,void 0,(function*(){if(this.isConnected||(this.debug("Not connected, re-connecting prior sending message."),yield this.reconnect()),!this.isConnected)throw this.debug("Socket not connected, unable to send message correctly."),new k("Socket not connected, unable to send message correctly.");this.debug("Sending message %o through socket.",e),this.socket.send(JSON.stringify(e))}))}createAnOpenSocket(e,i,o,n){return t(this,void 0,void 0,(function*(){const t=this.buildUrl();this.debug("Starting connection handshake with remote url %s.",t);try{const n=yield this.options.webSocketFactory(t);n.onopen=e,n.onerror=i,n.onclose=o,n.onmessage=this.onSocketMessage,this.socket=n}catch(e){n(e)}}))}buildUrl(){return void 0===this.apiToken?this.url:this.url.includes("?")?`${this.url}&token=${this.apiToken}`:`${this.url}?token=${this.apiToken}`}registerKeepAliveHandler(){const e=this.options.keepAliveIntervalInMs||V;this.debug("Unregistering keep alive interval"),this.intervalHandler=setInterval(()=>{this.isConnected&&void 0!==this.socket&&(this.debug("Sending keep alive pong through socket."),this.socket.send(JSON.stringify({type:"pong"})))},e)}unregisterKeepAliveHandler(){void 0!==this.intervalHandler&&(this.debug("Unregistering keep alive interval"),clearInterval(this.intervalHandler),this.intervalHandler=void 0)}reconnect(){return t(this,void 0,void 0,(function*(){if(this.debug("Reconnect has been invoked, perfoming initial re-connection logic."),this.connectionPromise)try{return this.debug("Awaiting actual connection to complete."),yield this.connectionPromise,!0}catch(e){this.debug("Original connection did not succeed, continuing re-connection process.")}return this.options.autoReconnect?new Promise(this.tryReconnect):(this.debug("Not re-connecting because client consumer auto reconnect option is falsy."),!1)}))}cleanSocket(){void 0!==this.intervalHandler&&this.unregisterKeepAliveHandler(),void 0!==this.socket&&(this.socket.onopen=W,this.socket.onclose=W,this.socket.onerror=W,this.socket.onmessage=W,this.socket=void 0)}onReconnect(){this.onReconnectListener&&this.onReconnectListener(),this.options.onReconnect&&this.options.onReconnect()}onClose(e){this.options.onClose&&this.options.onClose(e)}onError(e){this.options.onError&&this.options.onError(e)}keepAliveOption(){return void 0===this.options.keepAlive||this.options.keepAlive}}var z;(z=e.InboundMessageType||(e.InboundMessageType={})).ACTION_TRACE="action_trace",z.ERROR="error",z.LISTENING="listening",z.HEAD_INFO="head_info",z.PING="ping",z.PROGRESS="progress",z.UNLISTENED="unlistened",z.TABLE_DELTA="table_delta",z.TABLE_SNAPSHOT="table_snapshot",z.TRANSACTION_LIFECYCLE="transaction_lifecycle";class Q{constructor(){this.activePromise=new Promise((e,t)=>{this.resolver=e,this.rejecter=t})}promise(){return this.activePromise}resolve(e){this.resolver(e)}reject(e){this.rejecter(e)}}function Z(e,t={}){return new X(t.socket||G(e,Object.assign({id:"stream"},t.socketOptions)),void 0===t.autoRestartStreamsOnReconnect||t.autoRestartStreamsOnReconnect)}class X{constructor(t,i){this.debug=d("dfuse:stream"),this.debugTrace=d("dfuse-trace:stream"),this.streams={},this.handleMessage=t=>{const i=t;if("ping"===i.type)return void this.debug("Discarding 'ping' message from reaching the underlying stream(s).");let o=this.debugTrace;i.type!==e.InboundMessageType.ERROR&&i.type!==e.InboundMessageType.LISTENING&&i.type!==e.InboundMessageType.UNLISTENED||(o=this.debug),o("Routing socket message of type '%s' with req_id '%s' to appropriate stream",i.type,i.req_id);const n=this.streams[i.req_id||""];void 0!==n?n.onMessage(i,n):this.debug("No stream currently registered able to handle message with req_id '%s'",i.req_id)},this.handleReconnection=()=>{!1!==this.autoRestartStreamsOnReconnect&&Object.keys(this.streams).forEach(e=>{this.streams[e].restart()})},this.socket=t,this.autoRestartStreamsOnReconnect=i}release(){this.debug("Releasing default stream client"),this.socket.disconnect().catch(e=>{this.debug("An error occurred while disconnecting from socket while releasing instance",e)})}setApiToken(e){this.socket.setApiToken(e)}registerStream(e,i){return t(this,void 0,void 0,(function*(){this.socket.isConnected||(this.debug("Socket is not connected, connecting socket first."),yield this.socket.connect(this.handleMessage,{onReconnect:this.handleReconnection}));const t=e.req_id;if(void 0!==this.streams[t])throw new y(`A stream with id '${t}' is already registered, cannot register another one with the same id`);this.debug("Registering stream [%s] with message %o.",t,e);const o=new ee(t,e,i,e=>void 0!==this.streams[e],e=>this.unregisterStream(e),this.socket,this.debug.extend(t,":"));this.streams[t]=o;try{yield o.start()}catch(e){throw delete this.streams[t],new y(`Unable to correctly register stream '${t}'`,e)}return this.debug("Stream [%s] registered with remote endpoint.",t),o}))}unregisterStream(e){return t(this,void 0,void 0,(function*(){if(void 0===this.streams[e])return void this.debug("Stream [%s] is already unregistered, nothing to do.",e);const t=R({req_id:e});this.debug("Unregistering stream [%s] with message %o.",e,t),delete this.streams[e],this.socket.isConnected&&(yield this.socket.send(t)),Object.keys(this.streams).length<=0&&(this.debug("No more stream present, disconnecting socket."),this.socket.isConnected&&(yield this.socket.disconnect()))}))}}class ee{constructor(e,t,i,o,n,s,r){this.resolve=()=>{this.activeJoiner&&(this.debug("Resolving joiner promise."),this.activeJoiner.resolve(),this.activeJoiner=void 0)},this.reject=e=>{this.activeJoiner&&(this.debug("Rejecting joiner promise with error %o.",e),this.activeJoiner.reject(e),this.activeJoiner=void 0)},this.id=e,this.registrationMessage=t,this.onMessageHandler=i,this.streamExists=o,this.unregisterStream=n,this.socket=s,this.debug=r}get onMessage(){return this.onMessageHandler}currentActiveMarker(){return this.activeMarker}start(){return t(this,void 0,void 0,(function*(){return this.socket.send(this.registrationMessage)}))}restart(e){return t(this,void 0,void 0,(function*(){if(this.checkMarker(e),!this.streamExists(this.id))throw new y(`Trying to restart a stream '${this.id}' that is not registered anymore or was never registered`);let t=this.activeMarker;e&&(t=e);const i=Object.assign({},this.registrationMessage);t&&(i.start_block=t.atBlockNum),yield this.socket.send(i),this.onPostRestart&&this.onPostRestart()}))}join(){return t(this,void 0,void 0,(function*(){return void 0!==this.activeJoiner?this.activeJoiner.promise():(this.activeJoiner=new Q,this.activeJoiner.promise())}))}mark(e){this.activeMarker=this.checkMarker(e)}close(e={}){return t(this,void 0,void 0,(function*(){return this.unregisterStream(this.id).then(()=>{e.error?this.reject(e.error):this.resolve()}).catch(this.reject)}))}checkMarker(e){if(e){if(!e.atBlockNum||e.atBlockNum<0)throw new y("Only non-zero & positive `atBlockNum` markers are accepted for this operation");return e}}}function te(e){return new Promise(t=>setTimeout(t,e))}const ie=2500;class oe{constructor(e,i,o,n,s){this.debug=d("dfuse:graphql-stream"),this.debugTrace=d("dfuse-trace:graphql-stream"),this.streams={},this.handleMessage=e=>t(this,void 0,void 0,(function*(){const t=e;if("ka"===t.type)return void this.debug("Discarding 'ka' (Keep Alive) message from reaching the underlying stream(s).");if("connection_ack"===t.type||"connection_error"===t.type)return void this.connectionEstablisher.onMessage(t);let i=this.debug;"data"===t.type&&(i=this.debugTrace),i("Routing socket message of type '%s' with id '%s' to appropriate stream",t.type,t.id);const o=this.streams[t.id||""];if(void 0===o)return void this.debug("No stream currently registered able to handle message with 'id: %s'",t.id);if("data"===t.type)return void(t.payload.errors?o.onMessage({type:"error",errors:t.payload.errors,terminal:!1},o):o.onMessage({type:"data",data:t.payload.data},o));const n=e=>{this.debug("Closing the stream [%s] (in response of GraphQL '%s' message) failed %O.",o.id,t.type,e)};if("error"===t.type){if(o.onMessage({type:"error",errors:[t.payload],terminal:!0},o),this.autoRestartStreamsOnError)return this.debug("Stream [%s] received error message and auto restart on error set, waiting [%d ms] before restarting",o.id,this.restartOnErrorDelayInMs),yield te(this.restartOnErrorDelayInMs),void(yield o.restart().catch(e=>{o.close({error:e}).catch(n)}));o.isActive=!1}"complete"===t.type&&(o.onMessage({type:"complete"},o),o.isActive=!1),this.debug("About to close stream [%s] due to GraphQL '%s' message.",o.id,t.type);const s="error"===t.type?t.payload:void 0;o.close({error:s}).catch(n)})),this.handleReconnection=()=>{this.debug("Handling re-connection notification from socket."),!1!==this.autoRestartStreamsOnReconnect&&this.connectionEstablisher.establish(this.apiToken,this.socket).then(()=>Promise.all(Object.keys(this.streams).map(e=>this.streams[e].restart()))).catch(e=>t(this,void 0,void 0,(function*(){const t=()=>{this.debug("The re-connection failed to re-establish the GraphQL connection %O",e)};return Promise.all(Object.keys(this.streams).map(t=>this.streams[t].close({error:e}))).then(t).catch(t)})))},this.socket=e,this.autoRestartStreamsOnReconnect=i,this.autoRestartStreamsOnError=o,this.restartOnErrorDelayInMs=n,this.autoDisconnectSocket=s,this.connectionEstablisher=new se(this.debug)}release(){this.debug("Terminating connection & releasing default GraphQL stream client"),this.socket.disconnect().catch(e=>{this.debug("An error occurred while disconnecting from socket while releasing instance",e)})}setApiToken(e){this.apiToken=e}registerStream(e,i,o,n){return t(this,void 0,void 0,(function*(){if(this.socket.isConnected||(this.debug("Socket is not connected, connecting socket first."),yield this.socket.connect(this.handleMessage,{onReconnect:this.handleReconnection}),yield this.connectionEstablisher.establish(this.apiToken,this.socket)),void 0!==this.streams[e])throw new y(`A stream with id '${e}' is already registered, cannot register another one with the same id`);this.debug("Registering stream [%s]",e);const t=new ne(e,i,o,n,e=>void 0!==this.streams[e],e=>this.unregisterStream(e),this.socket,this.debug);this.streams[e]=t;try{yield t.start()}catch(t){throw delete this.streams[e],new y(`Unable to correctly register stream '${e}'`,t)}return this.debug("Stream [%s] registered with remote endpoint.",e),t}))}unregisterStream(e){return t(this,void 0,void 0,(function*(){const t=this.streams[e];if(void 0!==t){this.debug("Unregistering stream [%s].",e),delete this.streams[e];try{t.isActive&&this.socket.isConnected&&(yield this.socket.send({id:e,type:"stop"})),Object.keys(this.streams).length<=0&&this.autoDisconnectSocket&&(this.debug("No more stream present and auto disconnect sets to true, terminating connection & disconnecting socket."),this.socket.isConnected&&(yield this.socket.disconnect())),t.onUnregister()}catch(e){throw t.onUnregister(e),e}}else this.debug("Stream [%s] is already unregistered, nothing to do.",e)}))}}class ne{constructor(e,t,i,o,n,s,r,a){this.resolve=()=>{this.activeJoiner&&(this.debug("Resolving joiner promise for stream [%s].",this.id),this.activeJoiner.resolve())},this.reject=e=>{this.activeJoiner&&(this.debug("Rejecting joiner promise for stream [%s] with error %o.",this.id,e),this.activeJoiner.reject(e))},this.id=e,this.active=!1,this.registrationDocument=t,this.registrationVariables=i,this.onMessageHandler=o,this.streamExists=n,this.unregisterStream=s,this.socket=r,this.debug=a}get isActive(){return this.active}set isActive(e){this.active=e}get onMessage(){return this.onMessageHandler}currentActiveMarker(){return this.activeMarker}start(){return t(this,void 0,void 0,(function*(){const e=yield this.createStartMessage();return void 0!==e.payload.variables&&(e.payload.variables=Object.assign({cursor:""},e.payload.variables)),this.socket.send(e).then(()=>{this.active=!0})}))}restart(e){return t(this,void 0,void 0,(function*(){if(this.debug("About to restart stream [%s]",this.id),this.checkMarker(e),!this.streamExists(this.id))throw new y(`Trying to restart a stream '${this.id}' that is not registered anymore or was never registered`);let t=this.activeMarker;e&&(t=e);const i=yield this.createStartMessage();t&&(i.payload.variables=Object.assign(Object.assign({},i.payload.variables||{}),{cursor:t.cursor})),yield this.socket.send(i).then(()=>{this.active=!0}),this.onPostRestart&&this.onPostRestart()}))}createStartMessage(){return t(this,void 0,void 0,(function*(){let e=this.registrationVariables;return"function"==typeof e&&(e=yield e()),{id:this.id,type:"start",payload:{query:this.registrationDocument,variables:Object.assign({cursor:""},e||{})}}}))}join(){return t(this,void 0,void 0,(function*(){return void 0!==this.activeJoiner?this.activeJoiner.promise():(this.activeJoiner=new Q,this.activeJoiner.promise())}))}mark(e){this.activeMarker=this.checkMarker(e)}close(e={}){return t(this,void 0,void 0,(function*(){return this.closeError=e.error,yield this.unregisterStream(this.id)}))}checkMarker(e){if(e){if(!e.cursor)throw new y("Only non-empty `cursor` markers are accepted for this operation");return e}}onUnregister(e){e?this.reject(e):this.closeError?this.reject(this.closeError):this.resolve()}}class se{constructor(e){this.debug=e}establish(e,i){return t(this,void 0,void 0,(function*(){return void 0!==this.activeDeferred?this.activeDeferred.promise():(this.activeDeferred=new Q,this.activeSocket=i,this.debug("Initiating graphql stream connection"),i.send({type:"connection_init",payload:{Authorization:e}}),this.activeDeferred.promise())}))}onMessage(e){if(void 0!==this.activeDeferred)return"connection_ack"===e.type?(this.debug("Received connection_ack message, resolving active promise"),void this.resolve()):"connection_error"===e.type?(this.debug("Received connection_error message %O, rejecting active promise",e.payload),void this.reject(e.payload)):void this.debug("Received an unknown message while waiting for graphql connection to establish, something is fishy %O",e)}resolve(){void 0!==this.activeDeferred&&(this.debug("Resolving connection establisher deferred promise."),this.activeDeferred.resolve(),this.activeDeferred=void 0)}reject(e){const t=()=>{void 0!==this.activeDeferred&&(this.debug("Rejecting connection establisher deferred promise."),this.activeDeferred.reject(e),this.activeDeferred=void 0)};this.activeSocket&&this.activeSocket.isConnected?this.activeSocket.disconnect().then(t).catch(t):t()}}function re(){return new ae}class ae{constructor(){this.debug=d("dfuse:refresh-scheduler")}release(){this.debug("Releasing default refresh scheduler"),void 0!==this.renewalTimeout&&(this.debug("Clearing refresh timeout interval"),this.clearRefreshTimeout())}hasScheduledJob(){return void 0!==this.renewalTimeout}schedule(e,t,i){e<=0?this.debug("Delay in seconds should be greater than 0"):(this.renewalTimeout&&(this.debug("Clearing previous sheduled timer"),this.clearRefreshTimeout()),this.renewalTimeout=setTimeout(()=>{try{this.debug("Executing scheduled job at %s%O",new Date,t),t()}catch(e){this.debug("Scheduled job failed (%o)",e),i&&i(e)}this.clearRefreshTimeout()},1e3*e))}clearRefreshTimeout(){clearTimeout(this.renewalTimeout),this.renewalTimeout=void 0}}const ce=2147483647;let he=0;function ue(e){return"mainnet"===e||"jungle"===e||"kylin"===e||"worbli"===e?`${e}.eos.dfuse.io`:e}class de{constructor(e,t,i,o,n,s,r,a,c){this.debug=d("dfuse:client"),this.withDefaultOptions=e=>Object.assign({req_id:`${this.requestIdGenerator()}-${this.id}`},e),this.onTokenRefresh=e=>{this.streamClient.setApiToken(e),this.graphqlStreamClient.setApiToken(e)},this.id=e,this.apiKey=t,this.endpoints=i,this.httpClient=o,this.streamClient=n,this.graphqlStreamClient=s,this.requestIdGenerator=c,this.endpoints.authUrl.startsWith("null://")?this.apiTokenManager=g("a.b.c"):this.apiTokenManager=l(()=>this.authIssue(this.apiKey),this.onTokenRefresh,.95,r,a)}release(){this.debug("Releasing default dfuse client"),this.httpClient.release(),this.streamClient.release(),this.graphqlStreamClient.release(),this.apiTokenManager.release()}graphql(e,i,o={}){return t(this,void 0,void 0,(function*(){if("function"!=typeof i&&i&&(o=i),o.operationType&&!function(e){if(!e)return!1;return"subscription"===e||"query"===e||"mutation"===e}(o.operationType))throw new v(`The 'options.operationType' value '${o.operationType}' is invalid, it must be either 'query', 'mutation' or 'subscription').`);const t="function"==typeof i&&i;if(t)return this.withApiToken(t=>(this.graphqlStreamClient.setApiToken(t.token),this.graphqlStreamClient.registerStream(`${this.requestIdGenerator()}-${this.id}`,e,o.variables,i)));const n=this.inferOperationType(e,o.operationType);if(!n&&!t){throw new v(["We were not able to infer the GraphQL operation type you are trying to perform from","the document and options you provided. Without the document's operation type, we are","unable to determine the transport layer to use to execute your operation, either HTTP","or WebSocket transport.","","If you passed a document as a plain 'string' value, please use the `options.operationType`","option to provide the operation type to perform. You can also use the 'gql' string literal","processor to turn your string into a rich Document, on which inference always work.","","If you already provided the document a rich Document format via the 'gql` ...`' call, then it's","probably a bug in this library. You can provide the `options.operationType` option to workaround","the problem and report the bug to us with the document string used.","","Valid `options.operationType` values are either 'query', 'mutation' or 'subscription'.","","You can also force usage of WebSocket transport by providing the `options.onMessage` which","forces the usage of the WebSocket transport."].join("\n"))}if("subscription"===n&&!t){throw new v(["The `options.onMessage` parameter is required for 'subscription' document.","If your document is not a 'subscription' type, this is probably a bug with the library.","You can provide the `options.operationType` option to workaroundthe problem and report","the bug to us with the document string used."].join("\n"))}return yield this.apiRequest("/graphql","POST",{},{query:e,variables:o.variables})}))}streamActionTraces(t,i,o={}){return this.websocketStream(i,(i,n)=>i(e.OutboundMessageType.GET_ACTION_TRACES,t,n(Object.assign({listen:!0},o))))}streamTableRows(i,o,n={}){return t(this,void 0,void 0,(function*(){return this.websocketStream(o,(t,o)=>t(e.OutboundMessageType.GET_TABLE_ROWS,Object.assign({json:!0},i),o(Object.assign({listen:!0},n))))}))}streamTransaction(i,o,n={}){return t(this,void 0,void 0,(function*(){return this.websocketStream(o,(t,o)=>t(e.OutboundMessageType.GET_TRANSACTION_LIFECYCLE,i,o(Object.assign({listen:!0,fetch:!0},n))))}))}streamHeadInfo(t,i={}){return this.websocketStream(t,(t,o)=>t(e.OutboundMessageType.GET_HEAD_INFO,{},o(Object.assign({listen:!0},i))))}websocketStream(e,t){const i=t(E,this.withDefaultOptions);return this.registerStream(i,e)}authIssue(e){return t(this,void 0,void 0,(function*(){return this.httpClient.authRequest(F,"POST",void 0,{api_key:e})}))}fetchBlockIdByTime(e,i){return t(this,void 0,void 0,(function*(){let t=e;return e instanceof Date&&(t=e.toISOString()),this.apiRequest(j,"GET",{time:t,comparator:i})}))}fetchTransaction(e){return this.apiRequest(N.replace(":id",e),"GET")}searchTransactions(e,i={}){return t(this,void 0,void 0,(function*(){return this.apiRequest($,"GET",{q:e,start_block:i.startBlock,sort:i.sort,block_count:void 0===i.blockCount?ce:i.blockCount,limit:i.limit,cursor:i.cursor,with_reversible:i.withReversible})}))}stateAbi(e,i={}){return t(this,void 0,void 0,(function*(){return this.apiRequest(M,"GET",{account:e,block_num:i.blockNum,json:void 0===i.json||i.json})}))}stateAbiBinToJson(e,i,o,n={}){return t(this,void 0,void 0,(function*(){return this.apiRequest(P,"POST",void 0,{account:e,table:i,hex_rows:o,block_num:n.blockNum})}))}stateKeyAccounts(e,i={}){return t(this,void 0,void 0,(function*(){return this.apiRequest(q,"GET",{public_key:e,block_num:i.blockNum})}))}statePermissionLinks(e,i={}){return t(this,void 0,void 0,(function*(){return this.apiRequest(x,"GET",{account:e,block_num:i.blockNum})}))}stateTableScopes(e,i,o={}){return t(this,void 0,void 0,(function*(){return this.apiRequest(B,"GET",{account:e,table:i,block_num:o.blockNum})}))}stateTable(e,i,o,n={}){return t(this,void 0,void 0,(function*(){return this.apiRequest(D,"GET",{account:e,scope:i,table:o,block_num:n.blockNum,json:void 0===n.json||n.json,key_type:n.keyType,with_block_num:n.withBlockNum,with_abi:n.withAbi})}))}stateTableRow(e,i,o,n,s={}){return t(this,void 0,void 0,(function*(){return this.apiRequest(L,"GET",{account:e,scope:i,table:o,primary_key:n,block_num:s.blockNum,json:void 0===s.json||s.json,key_type:s.keyType,with_block_num:s.withBlockNum,with_abi:s.withAbi})}))}stateTablesForAccounts(e,i,o,n={}){return t(this,void 0,void 0,(function*(){return this.apiRequest(J,"POST",void 0,{accounts:e.join("|"),scope:i,table:o,block_num:n.blockNum,json:void 0===n.json||n.json,key_type:n.keyType,with_block_num:n.withBlockNum,with_abi:n.withAbi},{"Content-Type":"application/x-www-form-urlencoded"})}))}stateTablesForScopes(e,i,o,n={}){return t(this,void 0,void 0,(function*(){return this.apiRequest(U,"POST",void 0,{account:e,scopes:i.join("|"),table:o,block_num:n.blockNum,json:void 0===n.json||n.json,key_type:n.keyType,with_block_num:n.withBlockNum,with_abi:n.withAbi},{"Content-Type":"application/x-www-form-urlencoded"})}))}apiRequest(e,i,o,n,s){return t(this,void 0,void 0,(function*(){return this.withApiToken(t=>this.httpClient.apiRequest(t.token,e,i,o,n,s))}))}getTokenInfo(){return t(this,void 0,void 0,(function*(){return this.apiTokenManager.getTokenInfo()}))}registerStream(e,i){return t(this,void 0,void 0,(function*(){return this.withApiToken(t=>(this.streamClient.setApiToken(t.token),this.streamClient.registerStream(e,i)))}))}withApiToken(e){return t(this,void 0,void 0,(function*(){let t;try{this.debug("Retrieving latest API token via token manager"),t=yield this.apiTokenManager.getTokenInfo()}catch(e){throw new y("Unable to obtain the API token",e)}return yield e(t)}))}inferOperationType(e,t){if(this.debug("Trying to infer operation type based on document and predefined operation type, predefined operation type '%s' and document %o",t,e),t)return this.debug("Predefined type '%s' provided, using it straight away.",t),t;if("string"==typeof e){this.debug("Document is a plain string type, performing a poor-man Regex extraction.");const t=e.match(/^\s*(query|mutation|subscription)?\s*([_A-Za-z][_0-9A-Za-z]*\s*)?(\([^\)]*\)\s*)?{/);return null==t?void this.debug("Document string did not match our Regex, aborting inference."):t&&t[1]?(this.debug("Document string Regex matches have operation type '%s', using it.",t[1]),t[1]):(this.debug("Document string Regex matches but operation type was not present, using 'query'."),"query")}}}function le(){return`dc-${Math.random().toString(16).substr(2)}`}e.DEFAULT_DELAY_BUFFER_PERCENT=.95,e.DEFAULT_KEEP_ALIVE_INTERVAL_IN_MS=V,e.DEFAULT_RECONNECT_DELAY_IN_MS=K,e.DefaultClient=de,e.DfuseApiError=b,e.DfuseClientError=y,e.DfuseError=v,e.DfuseSocketError=k,e.FileApiTokenStore=_,e.InMemoryApiTokenStore=S,e.LocalStorageApiTokenStore=C,e.OnDiskApiTokenStore=A,e.V0_FETCH_BLOCK_ID_BY_TIME=j,e.V0_FETCH_TRANSACTION=N,e.V0_SEARCH_TRANSACTIONS=$,e.V0_STATE_ABI=M,e.V0_STATE_ABI_BIN_TO_JSON=P,e.V0_STATE_KEY_ACCOUNTS=q,e.V0_STATE_PERMISSION_LINKS=x,e.V0_STATE_TABLE=D,e.V0_STATE_TABLES_ACCOUNTS=J,e.V0_STATE_TABLES_SCOPES=U,e.V0_STATE_TABLE_ROW=L,e.V0_STATE_TABLE_SCOPES=B,e.V1_AUTH_ISSUE=F,e.createApiTokenManager=l,e.createDfuseClient=function(e){!function(e){if(null==e){throw new v(["The client must be configured with an API key via the ","`apiKey` config options.","","Received nothing."].join("\n"))}if(!e.match(/^(mobile|server|web)_[0-9a-f]{2,}/i)){const t=["The provided API key is not in the right format, expecting it","to start with either `mobile_`, `server_` or `web_` followed","by a series of hexadecimal character (i.e.) `web_0123456789abcdef`)",""];throw 3===e.split(".").length&&t.push("It seems your providing directly a API token (JWT) instead","of an API key and are using your previous authentication protocol.","Please refer to http://docs.dfuse.io/#authentication for","all the details about API key and how to generate an API token","from it.","","And you can visit https://app.dfuse.io to obtain your free API key",""),t.push(`Input received: ${e}`),new v(t.join("\n"))}}(e.apiKey);const t=ue(e.network),i=void 0===e.secure||e.secure,o=e.authUrl||"https://auth.dfuse.io",n=i?`https://${t}`:`http://${t}`,s=i?`wss://${t}`:`ws://${t}`,r={authUrl:o,graphqlQueryUrl:`${n}/graphql`,graphqlStreamUrl:`${s}/graphql`,restUrl:n,websocketUrl:s},a=e.httpClient||O(o,n,e.httpClientOptions),c=e.streamClient||Z(s+"/v1/stream",e.streamClientOptions),h=e.graphqlStreamClient||function(e,t={}){return new oe(t.socket||G(e,Object.assign({id:"graphql",webSocketProtocols:"graphql-ws"},t.socketOptions)),void 0===t.autoRestartStreamsOnReconnect||t.autoRestartStreamsOnReconnect,void 0===t.autoRestartStreamsOnError||t.autoRestartStreamsOnError,void 0===t.restartOnErrorDelayInMs?ie:t.restartOnErrorDelayInMs,void 0===t.autoDisconnectSocket||t.autoDisconnectSocket)}(r.graphqlStreamUrl,e.graphqlStreamClientOptions),u=e.apiTokenStore||function(e){const t=d("dfuse:client");if(t("Inferring API token store default concrete implementation to use"),"undefined"!=typeof window&&null!=window.localStorage)return t('Using `LocalStorageApiTokenStore` as we assumed a Browser environment (`typeof window.localStorage !== "undefined"`).'),new C("dfuse:token");if("undefined"==typeof window)return t('Using `OnDiskLocalStorageApiTokenStore` as we assumed a Node.js enviroment (`typeof window === "undefined"`).'),new A(e);return t("Falling back default `InMemoryApiTokenStore` concrete implementation"),new S}(e.apiKey),l=e.refreshScheduler||re(),g=e.requestIdGenerator||le;return new de(he++,e.apiKey,r,a,c,h,u,l,g)},e.createHttpClient=O,e.createNoopApiTokenManager=g,e.createOutboundMessage=E,e.createRefreshScheduler=re,e.createSocket=G,e.createStreamClient=Z,e.dynamicMessageDispatcher=function(e){return(t,i)=>{const o=e[t.type];o&&o(t,i)}},e.flattenActionTraces=function(e){if(!e.execution_trace)return[];const t={index:-1,actions:[]};return e.execution_trace.action_traces.forEach(e=>{!function e(t,i){i.index++;i.actions.push(t);const o=t.inline_traces||[];o.forEach(t=>{e(t,i)})}(e,t)}),t.actions},e.getActionTracesMessage=function(t,i={}){return E(e.OutboundMessageType.GET_ACTION_TRACES,t,Object.assign({listen:!0},i))},e.getHeadInfoMessage=function(t={}){return E(e.OutboundMessageType.GET_HEAD_INFO,{},Object.assign({listen:!0},t))},e.getTableRowsMessage=function(t,i={}){return E(e.OutboundMessageType.GET_TABLE_ROWS,t,Object.assign({listen:!0},i))},e.getTransactionLifecycleMessage=function(t,i={}){return E(e.OutboundMessageType.GET_TRANSACTION_LIFECYCLE,t,Object.assign({listen:!0,fetch:!0},i))},e.isApiTokenExpired=p,e.matchingActionTraces=function(e){if(!e.lifecycle.execution_trace)return[];const t=e.action_idx,i={index:-1,actions:[]};return e.lifecycle.execution_trace.action_traces.forEach(e=>{!function e(t,i,o){o.index++;i.includes(o.index)&&o.actions.push(t);const n=t.inline_traces||[];n.forEach(t=>{e(t,i,o)})}(e,t,i)}),i.actions},e.networkToEndpoint=ue,e.unlistenMessage=R,e.waitFor=te,Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=dfuse-client.umd.js.map
